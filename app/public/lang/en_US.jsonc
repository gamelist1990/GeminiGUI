{
  // English Language Pack
  "workspace": {
    "title": "Select Workspace",
    "openWorkspace": "Open Workspace",
    "recentWorkspaces": "Recent Workspaces",
    "favoriteWorkspaces": "Favorite Workspaces",
    "noRecent": "No recent workspaces",
    "noFavorites": "No favorite workspaces",
    "settings": "Settings",
    "checkingSetup": "Checking Gemini CLI setup..."
  },
  "setup": {
    "checking": "Checking Gemini CLI",
    "nodeInstall": "Node.js Installation",
    "geminiInstall": "Gemini CLI Installation",
    "auth": "Authentication Setup",
    "complete": "Setup Complete",
    "error": "Error",
    "installNode": "Install Node.js",
    "installComplete": "Installation Complete - Next",
    "installGemini": "Install Gemini CLI",
    "startAuth": "Start Authentication",
    "finish": "Finish",
    "retry": "Retry",
    "processing": "Processing...",
    "logs": {
      "checkingStart": "Starting Gemini CLI check...",
      "nodeCheck": "Checking Node.js installation...",
      "nodeFound": "‚úì Node.js found:",
      "nodeNotFound": "‚úó Node.js not found",
      "geminiCheck": "Checking Gemini CLI existence...",
      "geminiFound": "‚úì Gemini CLI found",
      "geminiNotFound": "‚úó Gemini CLI is not installed",
      "authCheck": "Checking authentication status...",
      "authConfirmed": "‚úì Google account authentication confirmed",
      "authRequired": "‚úó Google account authentication required",
      "checkComplete": "Check complete - geminiExists:",
      "nodeInstallStart": "Starting Node.js installation...",
      "nodeDownloadPage": "Opening https://nodejs.org/en/download in browser",
      "nodeDownloadComplete": "Node.js download page opened",
      "nodeInstallInstructions": "Please download and run the installer",
      "nodeInstallPrepComplete": "Node.js installation preparation complete",
      "nodeInstallCheck": "Please click 'Next' after installation is complete",
      "nodeInstallVerify": "Verifying Node.js installation...",
      "nodeInstallConfirmed": "‚úì Node.js installation confirmed",
      "nodeInstallFailed": "‚úó Node.js not found. Please install again",
      "geminiInstallStart": "Starting Gemini CLI installation...",
      "geminiInstallNote": "This may take a few minutes...",
      "geminiInstallComplete": "‚úì Gemini CLI installation completed",
      "geminiInstallError": "‚úó Error:",
      "authSetupStart": "Starting authentication setup...",
      "authConfigCreate": "Creating authentication configuration file...",
      "authConfigComplete": "‚úì Configuration file created:",
      "authConfigError": "‚úó Error:",
      "authProcessStart": "Starting Gemini CLI to begin authentication...",
      "authBrowserOpen": "Browser will open automatically...",
      "authLoginPrompt": "Please log in with your Google account",
      "authProcessStarted": "‚úì Authentication process started",
      "authPowershellOpen": "PowerShell window will open",
      "authCompleteInBrowser": "Please complete authentication in browser",
      "authImportantNote": "‚ö†Ô∏è Important: When the Gemini logo appears in the PowerShell window,",
      "authCloseWindow": "close that window and then click 'Verify Authentication'",
      "authVerifyStart": "Verifying authentication completion...",
      "authVerifyComplete": "‚úì Google account authentication confirmed!",
      "authSetupComplete": "‚úì Gemini CLI setup completely finished",
      "authFileNotFound": "‚úó Authentication file not found",
      "authNotComplete": "Please ensure authentication is complete in PowerShell window",
      "authHint": "Hint: After completing authentication in browser, return to PowerShell and wait for Gemini logo to appear",
      "authVerifyFailed": "‚úó Failed to verify authentication file",
      "checkError": "Error during check:",
      "installNodeError": "Could not open Node.js download page:",
      "installGeminiError": "Error during Gemini CLI installation:",
      "authSetupError": "Error during authentication setup:",
      "authStartError": "Error during authentication start:",
      "authVerifyError": "Error during authentication verification:",
      "authAlreadyComplete": "[Setup] Authentication already completed. Skipping setup check",
      "googleCloudProjectIdSet": "[Setup] googleCloudProjectId is set. Considering setup complete",
      "googleCloudProjectMissing": "[Setup] Google Cloud Project is not configured. Moving to auth-verify step",
      "geminiPathSaved": "‚úì Saved gemini.ps1 path to config.json",
      "geminiPathDetectFailed": "‚ö†Ô∏è Failed to auto-detect gemini.ps1 path. Using default path",
      "handleAuthVerifyStarted": "[Setup] handleAuthVerify started",
      "callingVerifyAuth": "[Setup] Calling setupGemini.verifyAuth",
      "debugVerifyAuth": "[Debug] Calling verifyAuth...",
      "verifyAuthCompleted": "[Setup] verifyAuth completed",
      "projectExistsEnvSetup": "[Setup] Project exists, setting up environment variable",
      "savingAuthAndProject": "[Setup] Saving geminiAuth and googleCloudProjectId to config.json",
      "authAndProjectSaved": "[Setup] geminiAuth and googleCloudProjectId saved",
      "movingToComplete": "[Setup] Moving to complete step",
      "cloudSetupNeeded": "[Setup] Cloud setup needed, hasProject: ",
      "noProjectFound": "[Setup] No project found, showing auto setup dialog",
      "showingAutoSetupDialog": "[Setup] Showing auto setup confirmation dialog",
      "startingAutoCloudSetup": "[Setup] Starting auto cloud setup process",
      "stepLoadingOAuth": "[Setup] Step 1: Loading OAuth credentials",
      "callingAutoSetupCloudProject": "[Setup] Calling autoSetupCloudProject",
      "autoSetupResult": "[Setup] autoSetupCloudProject result: ",
      "statusAllComplete": "‚úÖ Gemini CLI, authentication, and Google Cloud Project are all configured",
      "statusGeminiAuthReady": "‚úÖ Gemini CLI and Google authentication are complete",
      "statusProjectMissing": "‚ö†Ô∏è Please configure a Google Cloud Project",
      "statusGeminiAuthNeeded": "‚ö†Ô∏è Google account authentication is required",
      "statusNodeReadyGeminiMissing": "‚ö†Ô∏è Node.js is ready. Please install the Gemini CLI",
      "statusNodeMissing": "‚úó Node.js is not installed"
    }
  },
  "chat": {
    "title": "Chat",
    "newChat": "New Chat",
    "newChatOptions": "More options",
    "newAgentChat": "Agent Mode",
    "sessionLimit": "Session limit reached (max 5)",
    "tokenUsage": "Token Usage",
    "currentSession": "Current Session",
    "allSessions": "All Sessions",
    "elapsedTime": "Elapsed Time",
    "placeholder": "Type a message... (Ctrl+Enter to send)",
    "send": "Send",
    "sessions": "Sessions",
    "noMessages": "No messages",
    "renameSession": "Rename Session",
    "sessionName": "Session Name",
    "commands": {
      "compact": "Summarize conversation",
      "improve": "Improve prompt (high quality)",
      "init": "Generate Gemini.md"
    },
    "stats": {
      "button": "üìä Stats",
      "title": "Session Statistics",
      "modelUsage": "Model Usage",
      "requests": "Requests:",
      "errors": "Errors:",
      "latency": "Latency:",
      "tokenUsage": "Token Usage",
      "promptTokens": "Prompt:",
      "responseTokens": "Response:",
      "totalTokens": "Total:",
      "cachedTokens": "Cached:",
      "thoughtsTokens": "Thoughts:",
      "toolTokens": "Tool:",
      "toolUsage": "Tool Usage",
      "totalCalls": "Total Calls:",
      "success": "Success:",
      "fail": "Fail:",
      "totalDuration": "Total Duration:",
      "toolDetails": "Tool Details",
      "usageCount": "Usage Count:",
      "executionTime": "Execution Time:",
      "fileChanges": "File Changes",
      "linesAdded": "Lines Added:",
      "linesRemoved": "Lines Removed:",
      "cancel": "Cancel",
      "resend": "Resend (Ctrl+Enter)",
      "overview": "Overview",
      "sessionCount": "Session Count",
      "totalTokensSummary": "Total Tokens",
      "totalMessages": "Total Messages",
      "apiStats": "API Stats",
      "diff": "Diff:",
      "export": {
        "button": "Export",
        "title": "Export Conversation History",
        "selectSession": "Select Session",
        "format": "Format",
        "formatPdf": "PDF",
        "formatTxt": "Text File",
        "exporting": "Exporting...",
        "selectSessionFirst": "Please select a session first",
        "noSessionAvailable": "No sessions available for export",
        "successPdf": "Conversation history exported to PDF successfully",
        "successTxt": "Conversation history exported to text file successfully",
        "error": "Failed to export conversation history"
      }
    },
    "role": {
      "user": "User",
      "assistant": "Assistant"
    },
    "messageStats": {
      "fileChanges": "File Changes",
      "linesAdded": "Lines Added",
      "linesRemoved": "Lines Removed"
    },
    "processing": {
      "compacting": "Summarizing conversation history...",
      "compactError": "‚ùå No conversation to summarize. Please add messages before using the /compact command.",
      "compactPrompt": "Create a highly detailed and structured summary of the following conversation history so that future AI can understand it perfectly.\n\n# Summary Format\n\n## üìä Conversation Overview\n- Period: [First message time] to [Last message time]\n- Total Messages: XX (User: XX, AI: XX)\n- Main Topics: [List topics]\n- Conversation Purpose: [What the user is trying to achieve]\n\n## üìù Chronological Detailed Records\n\nFor each topic or activity, record in the following format:\n\n### [Time] Topic: [Topic Name]\n**User's Statements/Intentions:**\n- [Specific utterances]\n- [What the user was seeking]\n\n**AI's Responses:**\n- [Information provided or actions taken by AI]\n- [Results of responses]\n\n**Status/Progress:**\n- [Task completion status]\n- [Next required actions]\n\n**Important Context:**\n- [Background information to understand from this exchange]\n\n## üéØ Ongoing Tasks/Activities\n\nIf there are continuing activities, record them:\n- Task Name: [e.g., Shiritori game, code implementation, problem solving]\n- Current State: [How far it has progressed]\n- Next Steps: [What should be done next]\n- Important Constraints: [Game rules, technical constraints, etc.]\n\n## ‚ö†Ô∏è Cautions/Learning Points\n\nThings to be careful about in future conversations:\n- User Preferences: [Prefers concise responses, detailed responses, etc.]\n- Misunderstandings/Corrections: [Points AI misunderstood and their corrections]\n- Communication Style: [Patterns of interaction with user]\n\n## üí° Important Decisions/Conclusions\n\nThings decided or agreed upon in the conversation:\n- [Specific decision content]\n- [Future policy]\n\n## üìé Reference Information\n\n- Related Files: [Files or resources mentioned]\n- External Links: [Referenced URLs]\n- Keywords: [Keywords for search or reference]\n\n---\n\n**Summary Creation Guidelines:**\n1. Maintain chronology so conversation flow is clear\n2. Record user intentions contrasted with AI responses\n3. Clearly record status of ongoing activities (especially games/tasks)\n4. Always record misunderstandings or corrections\n5. Include sufficient detail for immediate context understanding in next conversation\n6. Format readably in Markdown\n\nPlease summarize the following conversation history in the above format:",
      "elapsedTime": "Elapsed time: {elapsedSeconds} seconds",
      "cancel": "Cancel",
      "pause": "Pause",
      "resume": "Resume",
      "paused": "Paused - AI generation suspended",
      "intervention": "Intervention",
      "interventionPlaceholder": "Add additional instructions or context...",
      "interventionSubmit": "Submit & Resume",
      "interventionCancel": "Cancel Intervention"
    },
    "compactWarning": {
      "messageCountExceeded": "The message count has exceeded {maxMessagesBeforeCompact} messages.",
      "recommendCompactOrNew": "It is recommended to organize the conversation with <strong>/compact</strong> or create a new session."
    },
    "overview": "Overview",
    "agent": {
      "title": "Agent Mode",
      "description": "AI will autonomously execute tasks",
      "tasks": "Task List",
      "currentTask": "Current Task",
      "noTasks": "No tasks",
      "taskPending": "Pending",
      "taskInProgress": "In Progress",
      "taskCompleted": "Completed",
      "taskFailed": "Failed",
      "thinking": "AI is thinking...",
      "executing": "Executing task...",
      "planningTasks": "Planning tasks...",
      "updateProgress": "Updating progress...",
      "editMessage": "Edit message (double-click)",
      "saveEdit": "Save",
      "cancelEdit": "Cancel"
    },
    "errors": {
      "geminiPathMissing": "geminiPath is not configured. Run setup to configure the gemini.ps1 path.",
      "configLoadFailed": "Failed to load configuration file.",
      "compactEmptyHistory": "Summary response was empty.",
      "compactCompleted": "‚úÖ Conversation sorted. You can continue the conversation and summaries will be saved in the system message above.",
      "initGenerating": "Generating Gemini.md...",
      "initFailed": "‚ùå Failed to create Gemini.md. AI may not have created the file or there may be tool execution issues.",
      "initFailedWithError": "‚ùå Error occurred while creating Gemini.md: {error}",
      "improveNoText": "‚ùå Please provide text to improve with the /improve command.\n\nUsage: /improve Explain this code\n\nThis command improves your message to be more specific, clear, and high-quality for AI understanding.",
      "improveProcessing": "AI is improving your prompt...",
      "geminiError": "An error occurred: {error}",
      "toolExecutionError": "‚ö†Ô∏è Tool execution permission error: {message}\n\nüîß **Solution**:\n‚Ä¢ This operation requires tool execution permissions. Change the approval mode to 'auto_edit' or 'yolo' to automatically allow tool permissions.\n\nCurrent approval mode: {approvalMode}\nUpdate the approval mode in Settings if needed.",
      "fileAccessError": "‚ö†Ô∏è **File access error**: {message}\n\nüîß **Solution**:\n‚Ä¢ Operations can only be performed within the current workspace directory (current workspace: `{workspacePath}`).\n‚Ä¢ Move the target files to the workspace folder or explicitly specify with prefix #file:... or #folder:... .\n‚Ä¢ Use `Documents/PEXData/GeminiGUI/Chatrequest/{workspaceId}` as a temporary file storage.",
      "toolNameError": "‚ö†Ô∏è **Tool name error**: {message}\n\nüîß **Solution**: AI attempted to use an incorrect tool name.\n\n**Available tools**:\n‚Ä¢ `read_file` - Read file contents\n‚Ä¢ `web_fetch` - Retrieve web content\n‚Ä¢ `glob` - File search\n\n**Common causes**:\n‚Ä¢ There may be an issue with AI settings or prompts\n‚Ä¢ Please check model and API key settings if necessary\n\nTry the request again, or check the settings.",
      "toolApprovalError": "‚ö†Ô∏è **Tool execution error**: {message}\n\nüîß **Solution**: Approval mode is set to 'default', restricting tool executions.\n\n**Change to one of these modes:**\n‚Ä¢ **auto_edit**: Automatically approve edit tools\n‚Ä¢ **yolo**: Automatically approve all tools\n\nPlease update the approval mode in the Settings screen.",
      "compactCommandFailed": "‚ùå Error occurred while summarizing conversation: {error}",
      "improveCommandFailed": "‚ùå Failed to improve prompt: {error}"
    }
  },
  "settings": {
    "title": "Settings",
    "language": "Language",
    "theme": "Theme",
    "light": "Light",
    "dark": "Dark",
    "save": "Save",
    "cancel": "Cancel",
    "back": "Back",
    // SettingsPage categories
    "categories": {
      "general": {
        "title": "General",
        "label": "General Settings",
        "description": "Language and theme settings"
      },
      "ai": {
        "title": "AI",
        "label": "AI Settings",
        "description": "Model, API key, and response mode settings"
      },
      "tools": {
        "title": "Tools",
        "label": "Tool Settings",
        "description": "Tool execution permissions and settings"
      },
      "appearance": {
        "title": "Appearance",
        "label": "Appearance",
        "description": "UI and display settings"
      },
      "system": {
        "title": "System",
        "label": "System",
        "description": "Setup verification and backup recommendations"
      }
    },
    "unsavedChanges": "You have unsaved changes. Are you sure you want to close?",
    "closeSettings": "Close Settings",
    "approvalMode": "Approval Mode",
    "defaultApproval": "Default (Prompt for approval)",
    "autoEditApproval": "Auto Edit (Auto-approve edit tools)",
    "yoloApproval": "YOLO (Auto-approve all tools)",
    "approvalDescription": "Controls how Gemini handles tool approvals. Default requires manual approval, Auto Edit automatically approves edits, and YOLO approves all actions.",
    "responseMode": "Response Mode",
    "asyncMode": "Async Mode (Current Standard)",
    "streamMode": "Stream Mode (Coming Soon)",
    "responseModeDescription": "Select how AI responses are processed. Async mode retrieves complete responses at once. Stream mode is planned for future implementation and will receive responses in real-time.",
    "streamNotAvailable": "‚ö†Ô∏è Stream mode is currently under development. It will be available in a future version.",
    "streamAvailableWithOpenAI": "‚úÖ Stream mode is available when using OpenAI API!",
    "modelSelection": "ü§ñ Model Selection",
    "defaultModel": "Default Gemini 2.5 Pro",
    "flashModel": "Gemini 2.5 Flash (Fast & Efficient)",
    "flashDescription": "Gemini 2.5 Flash offers faster response times and lower token consumption.",
    "customApiKey": "Custom API Key (Optional)",
    "apiKeyPlaceholder": "YOUR_API_KEY_HERE",
    "apiKeyDescription": "üí° Setting a custom API key will use it as the GEMINI_API_KEY environment variable.",
    "apiKeyDefaultNote": "Leaving blank will use the system's default API key.",
    "conversationCleanup": "Conversation Cleanup Timing",
    "messages": "messages",
    "cleanupDescription": "üìä When this message count is reached, /compact command or new session creation is recommended.",
    "cleanupReason": "Longer conversations increase token consumption, so regular cleanup is recommended.",
    "geminiSetupCheck": "ü§ñ Gemini CLI Setup Check",
    "checkSetup": "üîç Check Setup",
    "setupCheckDescription": "Check the status of Gemini CLI and Google account authentication. If setup is required, the setup wizard will start automatically.",
    "setupOk": "‚úì Gemini CLI is properly set up",
    "setupCheckError": "An error occurred during setup check",
    "backupWarning": "‚ö†Ô∏è Backup Recommended",
    "backupText": "This application does not have checkpointing functionality. It is strongly recommended to take appropriate backups using Git or other version control systems before making code changes with AI.",
    "backupTip1": "‚úì Commit to Git before starting changes",
    "backupTip2": "‚úì Create separate backups of important files",
    "backupTip3": "‚úì Create branches before major changes",
    // OpenAI API Support
    "enableOpenAI": "OpenAI API Support",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "openAIDescription": "ü§ñ When OpenAI API is enabled, you can use OpenAI models (GPT-4, GPT-3.5, etc.) instead of Gemini. Streaming is also available.",
    "openAIApiKey": "OpenAI API Key",
    "openAIApiKeyPlaceholder": "sk-... or xxx (placeholder acceptable)",
    "openAIApiKeyDescription": "Enter your OpenAI API key. Placeholders (like xxx) are also acceptable.",
    "openAIApiKeyNote": "If using a custom endpoint, set the appropriate API key.",
    "openAIBaseURL": "OpenAI Base URL",
    "openAIBaseURLDescription": "Specify the OpenAI API endpoint. Default is the official endpoint.",
    "openAIBaseURLNote": "If using a custom endpoint (like local LLM), set the URL here.",
    "openAIModel": "OpenAI Model",
    "openAIModelDescription": "Specify the OpenAI model to use (e.g., gpt-4, gpt-3.5-turbo, gpt-4-turbo).",
    "openAIModelNote": "Defaults to gpt-3.5-turbo if left blank.",
    "openAIStreamDescription": "‚ö° Stream mode is available when using OpenAI API. Receive responses in real-time."
  },
  "common": {
    "confirm": "Confirm",
    "cancel": "Cancel",
    "ok": "OK",
    "error": "Error",
    "success": "Success",
    "loading": "Loading..."
  },
  "fileAccess": {
    "fileNotFound": "File not found: {path}\n\nThe file may have been deleted or moved.",
    "fileOpenFailed": "Could not open file: {error}",
    "modelStats": "Model Usage",
    "tokenStats": "Token Usage",
    "toolStats": "Tool Usage",
    "requestCount": "Requests:",
    "errorCount": "Errors:",
    "latency": "Latency:",
    "promptTokens": "Prompt:",
    "responseTokens": "Response:",
    "totalTokens": "Total:",
    "cachedTokens": "Cached:",
    "thoughtTokens": "Thoughts:",
    "toolTokens": "Tool:",
    "totalCalls": "Total Calls:",
    "successful": "Successful:",
    "failed": "Failed:",
    "totalExecutionTime": "Total Execution Time:",
    "toolsDetailed": "Tools Detailed",
    "usageCount": "Usage Count:",
    "executionTime": "Execution Time:"
  }
}